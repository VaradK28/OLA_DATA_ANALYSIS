CREATE DATABASE ola;
USE ola;
SELECT * FROM bookings WHERE Booking_Status = "Success";

#1. Retrieve all successful bookings:

CREATE VIEW Successful_Bookings as
SELECT * FROM bookings
WHERE Booking_Status = 'Success';

SELECT * FROM Successful_Bookings;


#2. Find the average ride distance for each vehicle type:

CREATE VIEW ride_distance_for_each_vehicle as
SELECT Vehicle_Type, ROUND(avg(Ride_Distance),2) as Average_Ride_Distance
FROM bookings
GROUP BY Vehicle_Type;

SELECT * FROM ride_distance_for_each_vehicle;


#3. Get the total number of cancelled rides by customers:

CREATE VIEW Canceled_by_Customer as
SELECT count(*) from bookings
WHERE Booking_Status = "Canceled by Customer";

SELECT * FROM Canceled_by_Customer;


#4. List the top 5 customers who booked the highest number of rides:

CREATE VIEW Top_5_Customers as
SELECT Customer_ID, count(Booking_ID) as Number_Of_Rides
FROM bookings
GROUP BY Customer_ID
ORDER BY Number_Of_Rides DESC
LIMIT 5;

SELECT * FROM Top_5_Customers;


#5. Get the number of rides cancelled by drivers due to personal and car-related issues:

CREATE VIEW Rides_Cancelled_by_drivers_P_C_issues as
SELECT Count(*) as Number_Of_Rides
FROM bookings
WHERE Canceled_Rides_by_Driver = "Personal & Car related issue";

SELECT * FROM Rides_Cancelled_by_drivers_P_C_issues;


#6. Find the maximum and minimum driver ratings for Prime Sedan bookings:

CREATE VIEW Max_Min_Rating as
SELECT MAX(Driver_Ratings) as Maximum_Driver_Rating , 
	   MIN(Driver_Ratings) as Minimum_Driver_Rating
FROM bookings
WHERE Vehicle_Type = "Prime Sedan";

SELECT * FROM Max_Min_Rating;


#7. Retrieve all rides where payment was made using UPI:

CREATE VIEW Payment_By_UPI AS
SELECT * FROM bookings                        # COUNT(Booking_ID)
WHERE Payment_Method = "UPI";

SELECT * FROM Payment_By_UPI;


#8. Find the average customer rating per vehicle type:

CREATE VIEW Average_customer_rating as
SELECT Vehicle_Type, Round(AVG(Customer_Rating),2) as Average_customer_rating
FROM bookings
GROUP BY Vehicle_Type;

SELECT * FROM Average_customer_rating;


#9. Calculate the total booking value of rides completed successfully:

CREATE VIEW Count_Value_Of_Successful_Rides as
SELECT Booking_Status, Count(Booking_Status) as Number_of_Rides, sum(Booking_Value) as Total_value_Of_Successfully_completed_ride
FROM bookings
WHERE Booking_Status = "success";

SELECT * FROM Count_Value_Of_Successful_Rides;


#10. List all incomplete rides along with the reason:

CREATE VIEW Incomplete_Rides as
SELECT Booking_ID, Incomplete_Rides_Reason 
FROM bookings 
WHERE Incomplete_Rides = 'Yes';

SELECT * FROM Incomplete_Rides;



